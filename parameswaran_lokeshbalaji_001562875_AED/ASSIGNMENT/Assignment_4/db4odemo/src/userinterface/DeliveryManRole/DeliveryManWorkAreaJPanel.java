/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.EcoSystem;
import Business.Order.Order;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private Order orders;
     String deliverymanName;
    
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public DeliveryManWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.system = business;
        this.deliverymanName= userAccount.getUsername();
      
        
        populateTable();
    }
    
    public void populateTable(){
    
        
        DefaultTableModel dtm = (DefaultTableModel) deliverymantable.getModel();
        dtm.setRowCount(0);
        
                 
        for(Order o : system.getOrderDirectory().getOrderhist()){
            if(o.getDeliveryMan().getDeliveryManName().equals(deliverymanName)){
                Object row[] = new Object[6];
                row[0] = o.getOrderID();
                row[1] = o.getRestaurant().getName();
                row[2] = o.getUserAccount().getUsername();
                row[3] = o;
                row[4] = o.getComments();
                row[5] = o.getAmount();
                
                dtm.addRow(row);
            }
        } 
         
    }   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assignJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        deliverymantable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(240, 137, 38));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        assignJButton.setBackground(new java.awt.Color(204, 204, 204));
        assignJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        assignJButton.setText("Assign DeliveryMan");
        assignJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, -1, -1));

        deliverymantable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Restaurant Name", "Customer Name", "Status", "Comments", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(deliverymantable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 690, 100));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Delivery Man ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 20, 870, 40));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Delivered");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 260, -1, -1));

        jSeparator1.setOpaque(true);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 69, 870, 5));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

//        int selectedRow = workRequestJTable.getSelectedRow();
//        
//        if (selectedRow < 0){
//            return;
//        }
//        
//        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
//        request.setReceiver(userAccount);
//        request.setStatus("Pending");
//        populateTable();
         System.out.println("DDD ");
        int selectedRow1 = deliverymantable.getSelectedRow();
        if(selectedRow1 < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        orders = (Order)deliverymantable.getValueAt(selectedRow1,3);
        System.out.println("Order "+ orders.getOrderStatus());
        orders.setOrderStatus("Order Picked Up");
              
        
        populateTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println("DDD ");
        int selectedRow1 = deliverymantable.getSelectedRow();
        if(selectedRow1 < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
        orders = (Order)deliverymantable.getValueAt(selectedRow1,3);
        System.out.println("Order "+ orders.getOrderStatus());
        orders.setOrderStatus("Order Delivered");
              
        
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JTable deliverymantable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
